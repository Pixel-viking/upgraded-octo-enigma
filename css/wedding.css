
#container {
    background-image: url(../images/wedding.png);
    overflow: hidden;
    background-size: cover;
    background-position: center;
}

.chat-box {
    top: 600px;
    left: 900px;
}

/* container is suposed to match the left windows shape as closely as posible */
#window-container {
    overflow: hidden; 
    display: block;
    position: absolute;
    left: 190px;
    top: 80px;
    height: 250px;
    width: 120px;
    /* Under makes the div tag the right shape by curving the top to the aproximate shape */
    border-top-left-radius: 50%; 
    border-top-right-radius: 30%;

}



#rocket-container {
    position: absolute;
    opacity: 0.4;
    display: flex;
    flex-direction: column; 
    /* I used column in order to make the flames be below the rocket itself */
    overflow: visible;
    top: 120px;
    left: 150px;
    transform: rotate(-45deg);
    animation: rocket-flying-right-to-left 2s 1 linear forwards;
}

#falcon-rocket {
    height: 50px;
}

/* Lines the falmes up in a row */
#rocket-flames {
    display: flex;
    flex-direction: row; 
}

.flames {
    width: 5px;
    height: 50px;
    /* The gradient makes it easy to make the flames flikker */
    background: linear-gradient(rgba(200, 10, 10, 1), rgba(226, 88, 34, 1) 30%, transparent);

}

#flame-1 {
    animation: flames-moving-1 0.2s infinite;
}

#flame-2 {
    animation: flames-moving-2 0.2s infinite;
}

#flame-3 {
    animation: flames-moving-3   0.2s infinite;
}


.chat-buttons {
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    top: 450px;
    height: 50px;
    width: 80px;
}

.chat-lines {
    width: 0%;
    white-space: nowrap;
    overflow: hidden;
    /* 
        Display none in order to stop the lines from pushing each other around when they aren't suposed to be visible 
        The elements get "display block when they are suposed to appear"
    */
    display: none;
}

/* This peace of dialog is always meant to start the interaction */
#line-do-you {
    animation: text-appears 1s 1 forwards;
    display: block;
}

#button-1 {
    left: 500px; 
}

#button-2 {
    left: 790px;
}



.continue-button {
    display: none;
    justify-content: center;
    align-items: center;
    top: 300px;
    left: 460px; 
    height: 100px;
    text-decoration: none;
    opacity: 0;
    color: rgba(0, 0, 0, 1);
}


/* #Events-using-checkbox-hack */

#i-do-checkbox,
#i-dont-checkbox {
     display: none;
}

/* #I-do-interaction */

/* Makes the text-elements that are suposed to be shown visible  */
#i-do-checkbox:checked ~ .chat-box #line-do-cont,
#i-do-checkbox:checked ~ .chat-box #line-do,
#i-do-checkbox:checked ~ .chat-box #line-bride-happy {
    display: block;
}

/* Text apears on screen after i-do-checkbox is checked */
#i-do-checkbox:checked ~ .chat-box #line-do {
    animation: text-appears 1s steps(45) forwards; 
}

#i-do-checkbox:checked ~ .chat-box #line-bride-happy {
    animation: text-appears 1s 1s steps(14) forwards;
}

#i-do-checkbox:checked ~ .chat-box #line-do-con {
    animation: text-appears 1s 2s steps(48) forwards;
}

/* If one of the cehckboxes are checked the button (labels) are removed from the screen */
#i-dont-checkbox:checked ~ #button-2,
.chat-buttons:has(~#i-dont-checkbox:checked),
#i-do-checkbox:checked ~ #button-1,
#i-do-checkbox:checked ~ #button-2 {
    display: none;
}

#i-dont-checkbox:checked ~ .chat-box #line-dont {
    display: block;
}

#i-dont-checkbox:checked ~ .chat-box #line-dont {
    animation: text-appears 1s 1s 1 forwards;
}

#i-do-checkbox:checked ~ #i-do-link {
    display: flex;
    animation: button-fade-in 1s 3s 1 forwards;
}

#i-dont-checkbox:checked ~ #i-dont-link {
    display: flex;
    animation: button-fade-in 1s 2s 1 forwards;

}

@keyframes button-fade-in {
    0% {
        opacity: 0%;
    }
    100% {
        opacity: 100%;
    }
}


/* This animaiton is the same as the one in tesla with a few variations for each flame in the falcon */
/* Esentialy it just changes the background color in order to make it seem like flickering */
@keyframes flames-moving-1 {
    0% {
        background: linear-gradient(rgba(200, 10, 10, 1), rgba(226, 88, 34, 1) 30%, transparent)
    }
    50% {
        background: linear-gradient(rgba(200, 10, 10, 1) 30%, rgba(226, 88, 34, 1) 60%, transparent)
    }
    100% {
        background: linear-gradient(rgba(200, 10, 10, 1) 0%, rgba(226, 88, 34, 1) 70%, transparent)
    }
}

@keyframes flames-moving-2 {
    0% {
        background: linear-gradient(rgba(200, 10, 10, 1), rgba(226, 88, 34, 1) 40%, transparent)
    }
    50% {
        background: linear-gradient(rgba(200, 10, 10, 1) 20%, rgba(226, 88, 34, 1) 70%, transparent)
    }
    100% {
        background: linear-gradient(rgba(200, 10, 10, 1) 0%, rgba(226, 88, 34, 1) 50%, transparent)
    }
}

@keyframes flames-moving-3 {
    0% {
        background: linear-gradient(rgba(200, 10, 10, 1), rgba(226, 88, 34, 1) 80%, transparent)
    }
    50% {
        background: linear-gradient(rgba(200, 10, 10, 1) 30%, rgba(226, 88, 34, 1) 60%, transparent)
    }
    100% {
        background: linear-gradient(rgba(200, 10, 10, 1) 10%, rgba(226, 88, 34, 1) 70%, transparent)
    }
}

/* Defenetly not Elon in this rocket ;) */
@keyframes rocket-flying-right-to-left {
    100% {
        transform: translateY(-120px) translateX(-200px) rotate(-45deg);

    }
}

/* 
    Simple trick to make the text appear on screen. 
    By adjusting the width we are able to make it seem like it is being printed 
*/

@keyframes text-appears {
    0% {
        width: 0%;
    }
    100% {
        width: 100%;
    }
}
